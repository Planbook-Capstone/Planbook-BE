name: Build & Deploy All Microservices

on:
  push:
    branches: [ master ]

jobs:
  build-auth-service:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: auth-service

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build JAR
        run: mvn clean package -DskipTests

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & Push Auth-service image
        run: |
          docker build -t minhlola28/planbook-auth-service:latest .
          docker push minhlola28/planbook-auth-service:latest

  build-api-gateway:
    runs-on: ubuntu-latest
    needs: build-auth-service
    defaults:
      run:
        working-directory: api-gateway

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build JAR
        run: mvn clean package -DskipTests

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & Push API Gateway image
        run: |
          docker build -t minhlola28/planbook-api-gateway:latest .
          docker push minhlola28/planbook-api-gateway:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [build-auth-service, build-api-gateway]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Ensure deploy folder exists
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p /var/www/planbook-be/keys

      - name: Copy docker-compose.yml to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "deploy/docker-compose.yml"
          target: "/var/www/planbook-be/"
          strip_components: 1

      - name: Deploy on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker login -u minhlola28 -p ${{ secrets.DOCKERHUB_PASSWORD }}
            cd /var/www/planbook-be
            export SPRING_DATASOURCE_URL="${{ secrets.DB_URL }}"
            export SPRING_DATASOURCE_USERNAME="${{ secrets.DB_USERNAME }}"
            export SPRING_DATASOURCE_PASSWORD="${{ secrets.DB_PASSWORD }}"
            export SUPABASE_JWT_SECRET_KEY="${{ secrets.SUPABASE_JWT_SECRET_KEY }}"
            export SPRING_APP_SECRET_KEY="${{ secrets.SPRING_APP_SECRET_KEY }}"
            export KAFKA_TOPIC="${{ secrets.KAFKA_TOPIC }}"
            export MAIL_HOST="${{ secrets.MAIL_HOST }}"
            export MAIL_PORT="${{ secrets.MAIL_PORT }}"
            export MAIL_USERNAME="${{ secrets.MAIL_USERNAME }}"
            export MAIL_PASSWORD="${{ secrets.MAIL_PASSWORD }}"
            export APP_DURATION="${{ secrets.APP_DURATION }}"
            # Nếu không cần key path (app đọc key từ JAR/classpath) thì xóa 2 dòng export key path trên!

            docker compose pull
            docker compose up -d --remove-orphans

