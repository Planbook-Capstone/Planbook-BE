# File: .github/workflows/reusable/deploy-api-gateway.yml
# PHIÊN BẢN ĐÃ SỬA LỖI HOÀN CHỈNH

name: Reusable Deploy API Gateway

on:
  workflow_call:
    inputs:
      service_path:
        description: 'Đường dẫn đến thư mục API Gateway'
        required: true
        type: string
      vps_target_path:
        description: 'Đường dẫn đích trên VPS cho service này'
        required: true
        type: string
    secrets:
      VPS_HOST:
        required: true
      VPS_USER:
        required: true
      SSH_PRIVATE_KEY:
        required: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Maven Clean and Package API Gateway
        working-directory: ${{ inputs.service_path }}
        run: mvn clean package -DskipTests

      - name: Create docker-compose.yml on runner
        working-directory: ${{ inputs.service_path }}
        run: |
          cat <<EOF > docker-compose.yml
          version: '3.8'
          # Tên project duy nhất để không xung đột với stack của auth-service
          name: planbook-api-gateway-stack

          services:
            api-gateway:
              build:
                context: .
                dockerfile: Dockerfile
              image: planbook-api-gateway:latest
              container_name: planbook-api-gateway
              restart: always
              ports:
                - "8080:8080" # API Gateway sẽ chạy trên cổng 8080 của VPS
              environment:
                SPRING_PROFILES_ACTIVE: "prod"
                SERVER_PORT: 8080
                SPRING_APPLICATION_NAME: "api-gateway"
          EOF
        shell: bash

      - name: Copy Project Files to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "${{ inputs.service_path }}/target/*.jar, ${{ inputs.service_path }}/Dockerfile, ${{ inputs.service_path }}/docker-compose.yml"
          target: ${{ inputs.vps_target_path }}

      - name: Stop and Remove Old API Gateway Container on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo mkdir -p ${{ inputs.vps_target_path }}
            sudo chown -R ${{ secrets.VPS_USER }}:${{ secrets.VPS_USER }} ${{ inputs.vps_target_path }}
            cd ${{ inputs.vps_target_path }} || exit 1
            
            echo "Stopping and removing old API Gateway stack if it exists..."
            # Sử dụng --project-name để đảm bảo chỉ dừng đúng stack của API Gateway
            docker compose -f docker-compose.yml --project-name planbook-api-gateway-stack down 2>/dev/null || true

            echo "Cleaning up old API Gateway image..."
            docker rmi planbook-api-gateway:latest 2>/dev/null || true
            
            echo "Old API Gateway container and image cleaned up."

      - name: Start API Gateway with Docker Compose on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ inputs.vps_target_path }} || exit 1
            echo "Building and starting API Gateway..."
            # Sử dụng --project-name để đảm bảo chỉ khởi động đúng stack của API Gateway
            docker compose -f docker-compose.yml --project-name planbook-api-gateway-stack up --build -d --remove-orphans
            echo "API Gateway started. Use 'docker compose -p planbook-api-gateway-stack logs -f' to monitor."